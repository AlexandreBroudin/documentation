---
title: Create a site
listed: true
---
{% extends 'guides/editor' %}

{% block 'content' %}
:markdown
  # 1. prepare your environment

  We recommend you to store all the websites built with the editor into a same parent folder.

      mkdir -p ~/Documents/LocomotiveCMS/sites
      cd ~/Documents/LocomotiveCMS/sites

  # 2. generate a website

      locomotive_editor create -n my_first_website --template=twitter_bootstrap_haml

  This will create a folder named my\_first\_website populated a default index page and all the twitter bootstrap resources (javascripts, stylesheets and images).

  <div class="alert alert-info">
  <strong>Note:</strong> In the example above, we decided to not start from scratch but instead with a pre-existing site template (ie: twitter_bootstrap_haml). Check this <a href="/editor/site_templates">link</a> to learn more about this functionality.
  </div>
  Structure of the generated website

  <table>
    <thead>
      <tr>
        <th>File / Folder</th>
        <th>Purpose</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>app/content_types</td>
        <td>The definitions of the content types are stored here (file extension: .yml)</td>
      </tr>
      <tr>
        <td>app/views/pages</td>
        <td>The liquid files for the pages (file extensions: .liquid or .liquid.haml)</td>
      </tr>
      <tr>
        <td>app/views/snippets</td>
        <td>The liquid files for the snippets (file extensions: .liquid or .liquid.haml)</td>
      </tr>
      <tr>
        <td>config/site.yml</td>
        <td>Your site config file. It describes the information about your site (meta) and your pages</td>
      </tr>
      <tr>
        <td>config/deploy.yml</td>
        <td>It describes the targets where to push your site</td>
      </tr>
      <tr>
        <td>data</td>
        <td>Each content type can have its own set of data. They are described in Yaml files under this folder</td>
      </tr>
      <tr>
        <td>public/fonts</td>
        <td>The font files here (from FontSquirrel for instance)</td>
      </tr>
      <tr>
        <td>public/images</td>
        <td>All the images needed by your layouts</td>
      </tr>
      <tr>
        <td>public/javascripts</td>
        <td>The javascript files (file extensions: .js or .js.coffee)</td>
      </tr>
      <tr>
        <td>public/stylesheets</td>
        <td>The stylesheets files (file extensions: .css or .css.scss)</td>
      </tr>
      <tr>
        <td>public/samples</td>
        <td>The files you use for your content types or the editable contents inside pages</td>
      </tr>
    </tbody>
  </table>

  # 3. edit your website

      mate my_first_website

  <div class="alert alert-info">
  <strong>Note:</strong>
  At this point, you could version your website with <a href="http://git-scm.com">GIT</a>, <a href="http://subversion.tigris.org/">SUBVERSION</a> or any SCM.
  </div>

  # 4. launch the LocomotiveEditor webserver

      locomotive_editor run -n my_first_website
      open http://0.0.0.0:4567

  Here you go, you can now modify your sites within your IDE. By simply refresh your browser, you will able to see the changes you have just made !

  <div class="alert alert-info">
  <strong>Note:</strong> You can ommit the <b>"-n my_first_website"</b>
  parameter if you already are in the <b>my_first_website</b> folder. <br>
  That also goes for all the commands which require to pass the site name.
  </div>


{% endblock %}
