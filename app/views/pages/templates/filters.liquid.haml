{% extends 'index' %}

{% block 'main' %}

.hero-unit

  %h1 Templates &rarr; Filters

.tabbable

  %ul.nav.nav-tabs
    %li.dropdown
      %a{ :href => '#', :'data-toggle' => 'dropdown', :class => 'dropdown-toggle' }
        HTML
        %b.caret
      %ul.dropdown-menu
        %li
          %a{ :href => '#auto-discovery-section', :'data-toggle' => 'tab' } auto_discovery_link_tag
        %li
          %a{ :href => '#flash-section', :'data-toggle' => 'tab' } flash_tag
        %li
          %a{ :href => '#image-section', :'data-toggle' => 'tab' } image_tag
        %li
          %a{ :href => '#javascript-url-section', :'data-toggle' => 'tab' } javascript_url
        %li
          %a{ :href => '#javascript-tag-section', :'data-toggle' => 'tab' } javascript_tag
        %li
          %a{ :href => '#stylesheet-url-section', :'data-toggle' => 'tab' } stylesheet_url
        %li
          %a{ :href => '#stylesheet-tag-section', :'data-toggle' => 'tab' } stylesheet_tag
        %li
          %a{ :href => '#theme-image-url-section', :'data-toggle' => 'tab' } theme_image_url
        %li
          %a{ :href => '#theme-image-tag-section', :'data-toggle' => 'tab' } theme_image_tag

    %li.dropdown
      %a{ :href => '#', :'data-toggle' => 'dropdown', :class => 'dropdown-toggle' }
        Text
        %b.caret
      %ul.dropdown-menu
        %li
          %a{ :href => '#underscore-section', :'data-toggle' => 'tab' } underscore
        %li
          %a{ :href => '#dasherize-section', :'data-toggle' => 'tab' } dasherize
        %li
          %a{ :href => '#multi-line-section', :'data-toggle' => 'tab' } multi_line
        %li
          %a{ :href => '#concat-section', :'data-toggle' => 'tab' } concat
        %li
          %a{ :href => '#textile-section', :'data-toggle' => 'tab' } textile

    %li.dropdown
      %a{ :href => '#', :'data-toggle' => 'dropdown', :class => 'dropdown-toggle' }
        Date
        %b.caret
      %ul.dropdown-menu
        %li
          %a{ :href => '#localized-date-section', :'data-toggle' => 'tab' } localized_date
        %li
          %a{ :href => '#format-date-section', :'data-toggle' => 'tab' } format_date

    %li.dropdown
      %a{ :href => '#', :'data-toggle' => 'dropdown', :class => 'dropdown-toggle' }
        Misc
        %b.caret
      %ul.dropdown-menu
        %li
          %a{ :href => '#default-pagination-section', :'data-toggle' => 'tab' } default_pagination
        %li
          %a{ :href => '#resize-section', :'data-toggle' => 'tab' } resize
        %li
          %a{ :href => '#modulo-section', :'data-toggle' => 'tab' } modulo
        %li
          %a{ :href => '#first-section', :'data-toggle' => 'tab' } first
        %li
          %a{ :href => '#last-section', :'data-toggle' => 'tab' } last
        %li
          %a{ :href => '#default-section', :'data-toggle' => 'tab' } default

  .tab-content

    .tab-pane.active

      .alert.alert-info
        %b Important note: please read below

      %p In all our examples, we use simple input like String. Keep in mind that the input can also be an expression such as

      %pre
        :plain
          &#123;&#123; project.description | textile &#125;&#125;

    -# default
    #default-section.tab-pane

      %h3 default(input, value)

      %br

      %p
        Return the
        %b value
        parameter if the input is either null or empty.

      %br

      %pre
        :plain
          &#123;&#123; params.author | default: 'John Doe' &#125;&#125;
      %p
        %strong Example:
        Returns
        %b "John Doe"
        if the value of
        %i params.author
        is null.

    -# first
    #first-section.tab-pane

      %h3 first(input)

      %br

      %p
        Return the first occurrence of the input object.
        %br
        If the object is a String, it returns the first letter.
        %br
        If it is an Array, the first entry is returned.
        %br
        If the input is a collection, the first method is called on that collection.

      %br

      %pre
        :plain
          &#123;&#123; [42, 0] | first &#125;&#125;
      %p
        %strong Example:
        Returns
        %b 42

      %pre
        :plain
          &#123;&#123; 'Hello World' | first &#125;&#125;
      %p
        %strong Example:
        Returns
        %b "H"

    -# last
    #last-section.tab-pane

      %h3 last(input)

      %br

      %p
        Return the last occurrence of the input object.
        %br
        If the object is a String, it returns the last letter.
        %br
        If it is an Array, the last entry is returned.
        %br
        If the input is a collection, the last method is called on that collection.

      %br

      %pre
        :plain
          &#123;&#123; [42, 0] | last &#125;&#125;
      %p
        %strong Example:
        Returns
        %b 0

      %pre
        :plain
          &#123;&#123; 'Hello World' | last &#125;&#125;
      %p
        %strong Example:
        Returns
        %b "d"

    -# default_pagination
    #default-pagination-section.tab-pane

      %h3 default_pagination(input, options)

      %br

      %p
        Render the navigation for a paginated collection. Input is the variable returned by the paginate tag (TODO link to the paginate tag)

      %br

      %pre
        :plain
          &#123;&#123; paginate | default_pagination: next: 'Next entries', previous: 'Previous entries' &#125;&#125;

      %br

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td previous
            %td String
            %td Label of the previous link. By default, the value of I18n.t('pagination.previous') is used.
          %tr
            %td next
            %td String
            %td Label of the next link. By default, the value of I18n.t('pagination.previous') is used.

    -# resize
    #resize-section.tab-pane

      %h3 resize(input, resize_string)

      %br

      %p
        Resize any image on the fly by calling behind the scene the
        %a{ :href => 'https://github.com/markevans/dragonfly' } DragonFly gem.
        %br
        The url to the dynamically resized image is returned.
        The processing relies on ImageMagick.

      %br

      %pre
        :plain
          &#123;&#123; project.screenshot | resize: '100x100' &#125;&#125;

      %pre
        :plain
          &#123;&#123; 'http://example.com/images/banner.png' | resize: '300x50#' &#125;&#125;

      %br

      .alert.alert-info
        By default, the Rack::Cache middleware is called for the caching. If you host your LocomotiveCMS on Heroku, Varnish is used instead. For more information, please visit this
        %a{ :href => 'http://markevans.github.com/dragonfly/file.Caching.html' } page.

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td resize_string
            %td String
            %td
              The ImageMagick geometry string. See the following
              %a{ :href => 'http://markevans.github.com/dragonfly/file.ImageMagick.html' } link
              for examples.

    -# modulo
    #modulo-section.tab-pane

      %h3 modulo(input, index, modulo)

      %br

      %p
        Print the input string every
        %b modulo
        occurences.

      %br

      %pre
        :plain
          &#123;&#123; 'odd' | modulo: 0, 2 &#125;&#125;
      %p
        %strong Example:
        Returns
        %b ""

      %pre
        :plain
          &#123;&#123; 'odd' | modulo: 1, 2 &#125;&#125;
      %p
        %strong Example:
        Returns
        %b "odd"

      %br

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td index
            %td Integer
            %td The counter. Usually, the index variable within a for loop
          %tr
            %td modulo
            %td Integer
            %td By default, it is the current locale

    -# localized_date
    #localized-date-section.tab-pane

      %h3 localized_date(input, format, locale)

      %br

      %p Pretty print a date.

      %br

      %pre
        :plain
          &#123;&#123; today | localized_date: '%d %B' &#125;&#125;
      %p
        %strong Example:
        Returns
        %b 21 december

      %br

      %pre
        :plain
          &#123;&#123; today | localized_date: '%d %B', 'fr' &#125;&#125;
      %p
        %strong Example:
        Returns
        %b 29 juin

      %br

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td format
            %td String
            %td It depends on the current locale. For the 'en' locale, it is "%m/%d/%Y".
          %tr
            %td locale
            %td String
            %td <i>Optional</i>. By default, it is the current locale.

    -# format_date
    #format-date-section.tab-pane

      %h3 format_date(input, format, locale)

      %br

      %p
        alias for
        %b localized_date

    -# underscore
    #underscore-section.tab-pane

      %h3 underscore(input)

      %br

      %p Makes an underscored, lowercase form from the expression in the string.

      %br

      %pre
        :plain
          &#123;&#123; 'FooBar' | underscore &#125;&#125;
      %p
        %strong Example:
        Returns
        %b foo_bar

    -# dasherize
    #dasherize-section.tab-pane

      %h3 dasherize(input)

      %br

      %p Replaces underscores with dashes in the string.

      %br

      %pre
        :plain
          &#123;&#123; 'hello_world' | dasherize &#125;&#125;
      %p
        %strong Example:
        Returns
        %b hello-bar

    -# multi_line
    #multi-line-section.tab-pane

      %h3 multi_line(input)

      %br

      %p
        :escaped
          Inserts a <br /> tag in front of every \n linebreak character.

      %br

      %pre
        :plain
          &#123;&#123; "hello\nworld" | multi_line &#125;&#125;
      %p
        %strong Example:
        Returns
        %b
          :escaped
            hello<br/>world

    -# concat
    #concat-section.tab-pane

      %h3 concat(input, args)

      %br

      %p Append strings passed in args to the input

      %br

      %pre
        :plain
          &#123;&#123; 'hello' | concat: 'world', 'yeah' &#125;&#125;
      %p
        %strong Example:
        Returns
        %b helloworldyeah

    -# textile
    #textile-section.tab-pane

      %h3 textile(input)

      %br

      %p Convert a Markdown-formatted string into HTML.

      %br

      %pre
        :plain
          &#123;&#123; '### Header' | textile &#125;&#125;
      %p
        %strong Example:
        Returns
        %b
          :escaped
            <h3>Header</h3>

    -# auto_discovery_link_tag
    #auto-discovery-section.tab-pane

      %h3 auto_discovery_link_tag(input, options)

      %br

      %p Return a link tag that browsers and news readers can use to auto-detect an RSS or ATOM feed.

      %br

      %pre
        :plain
          &#123;&#123; '/projects/atom' | auto_discovery_link_tag: 'rel:alternate', 'type:application/atom+xml', 'title:A title' &#125;&#125;
      %p
        %strong Example:
        Display the following

      %pre
        :escaped
          <link rel="alternate" type="application/atom+xml" title="A title" href="/projects/atom" />

      %br

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td title
            %td String
            %td By default, its value is 'RSS'
          %tr
            %td rel
            %td String
            %td By default, its value is 'alternate'
          %tr
            %td type
            %td String
            %td By default, its value is 'application/rss+xml'

    -# flash_tag
    #flash-section.tab-pane

      %h3 flash_tag(input, options)

      %br

      %p Embed a flash movie into a page

      %br

      %pre
        :plain
          &#123;&#123; 'http://youtube.com?...' | flash_tag: width: '100px', height: '50px' &#125;&#125;

      %br

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td width
            %td String
            %td pixel or %
          %tr
            %td height
            %td String
            %td pixel or %

    -# image_tag
    #image-section.tab-pane

      %h3 image_tag(input, options)

      %br

      %p Return the HTML img tag

      %br

      %pre
        :plain
          &#123;&#123; 'http://placehold.it/350x150' | image_tag: alt: "hello world" &#125;&#125;
      %p
        %strong Example:
        Returns
        :escaped
          <img src="http://placehold.it/350x150" alt="hello world" />

      %br

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td alt
            %td String
            %td &nbsp;
          %tr
            %td title
            %td String
            %td &nbsp;

    -# javascript_url
    #javascript-url-section.tab-pane

      %h3 javascript_url(input)

      %br

      %p Return the url of a theme asset javascript

      %br

      %pre
        :plain
          &#123;&#123; 'application.js' | javascript_url &#125;&#125;
      %p
        %strong Example:
        Returns
        :escaped
          "/sites/<site_id>/theme/javascripts/application.js"

    -# javascript_tag
    #javascript-tag-section.tab-pane

      %h3 javascript_tag(input)

      %br

      %p Return the link tag of a theme stylesheet

      %br

      %pre
        :plain
          &#123;&#123; 'application.js' | javascript_tag &#125;&#125;
      %p
        %strong Example:
        Returns
        :escaped
          <script src="/sites/<site_id>javascripts/application.js" type="text/javascript"></script>

    -# stylesheet_url
    #stylesheet-url-section.tab-pane

      %h3 stylesheet_url(input)

      %br

      %p Return the url of a theme asset stylesheet

      %br

      %pre
        :plain
          &#123;&#123; 'application.css' | stylesheet_url &#125;&#125;
      %p
        %strong Example:
        Returns
        :escaped
          "/sites/<site_id>/theme/stylesheets/application.css"

    -# stylesheet_tag
    #stylesheet-tag-section.tab-pane
      %h3 stylesheet_tag(input, media)

      %br

      %p Return the link tag of a theme stylesheet

      %br

      %pre
        :plain
          &#123;&#123; 'application.css' | stylesheet_tag &#125;&#125;
      %p
        %strong Example:
        Returns
        :escaped
          <link href="/sites/<site_id>/theme/stylesheets/application.css" media="screen" rel="stylesheet" type="text/css" />

      %br

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td media
            %td String
            %td By default, its value is 'screen'

    -# theme_image_url
    #theme-image-url-section.tab-pane
      %h3 theme_image_url(input)

      %br

      %p Return the url of a theme image

      %br

      %pre
        :plain
          &#123;&#123; 'banner.png' | theme_image_url &#125;&#125;
      %p
        %strong Example:
        Returns
        :escaped
          "/sites/<site_id>/theme/images/banner.png"

    -# theme_image_tag
    #theme-image-tag-section.tab-pane

      %h3 theme_image_tag(input, options)

      %br

      %p Return the image tag of a theme image

      %br

      %pre
        :plain
          &#123;&#123; 'banner.png' | theme_image_tag: alt: "hello world" &#125;&#125;
      %p
        %strong Example:
        Returns
        :escaped
          <img src="/sites/<site_id>/theme/images/banner.png" alt="hello world" />

      %br

      %h4 Options

      %br

      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th Name
            %th Type
            %th Description
        %tbody
          %tr
            %td alt
            %td String
            %td &nbsp;
          %tr
            %td title
            %td String
            %td &nbsp;

{% endblock %}
